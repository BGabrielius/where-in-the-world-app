{"version":3,"file":"static/js/376.67a5504c.chunk.js","mappings":"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","sources":["webpack://whereintheworld/./src/components/QuizAnswers/QuizAnswers.module.css?fdfc","components/QuizAnswers/index.js","components/QuizAnswers/QuizAnswers.tsx","webpack://whereintheworld/./src/components/ResultTracker/ResultTracker.module.css?caa9","components/ResultTracker/index.js","components/ResultTracker/ResultTracker.tsx","webpack://whereintheworld/./src/components/Challenges/Challenges.module.css?4281","components/Challenges/index.js","components/Challenges/Challenges.tsx","webpack://whereintheworld/./src/components/QuizResults/QuizResults.module.css?703c","webpack://whereintheworld/./src/components/Button/Button.module.css?ce6f","components/Button/index.js","components/Button/Button.tsx","components/QuizResults/index.js","components/QuizResults/QuizResults.tsx","webpack://whereintheworld/./src/pages/Quiz/QuizPage.module.css?e98c","pages/Quiz/QuizPage.tsx","pages/Quiz/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"QuizAnswers_container__36hKA\",\"btnContainer\":\"QuizAnswers_btnContainer__cuR4Q\",\"quizBtn\":\"QuizAnswers_quizBtn__kk+yE\",\"selectedCorrect\":\"QuizAnswers_selectedCorrect__Cxbmc\",\"selectedIncorrect\":\"QuizAnswers_selectedIncorrect__mgvn0\",\"forwardBtnContainer\":\"QuizAnswers_forwardBtnContainer__Njssm\",\"forwardBtn\":\"QuizAnswers_forwardBtn__rYVM4\",\"forwardIcon\":\"QuizAnswers_forwardIcon__BnO8m\"};","import QuizAnswers from \"./QuizAnswers\";\r\n\r\nexport default QuizAnswers;\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styledQuizAnswers from \"./QuizAnswers.module.css\";\r\n\r\nimport { DoubleArrowRightIcon } from \"@radix-ui/react-icons\";\r\n\r\ninterface Props {\r\n  correct: string | number;\r\n  incorrect: any;\r\n  updateStage: () => void;\r\n  handleResults: (isCorrect: boolean | null) => void;\r\n}\r\ninterface Answer {\r\n  value: any;\r\n  isCorrect: boolean;\r\n}\r\n\r\nconst QuizAnswers: React.FC<Props> = ({\r\n  correct,\r\n  incorrect,\r\n  updateStage,\r\n  handleResults,\r\n}) => {\r\n  // state\r\n  const [answers, setAnswers] = useState<Answer[]>([]);\r\n  const [selectedAnswer, setSelectedAnswer] = useState<Answer | null>(null);\r\n\r\n  // side effects\r\n  React.useEffect(() => {\r\n    if (correct) {\r\n      setAnswers(\r\n        [\r\n          ...incorrect.map((value: any) => ({ value, isCorrect: false })),\r\n          { value: correct, isCorrect: true },\r\n        ].sort(() => Math.random() - 0.5)\r\n      );\r\n    }\r\n  }, [correct, incorrect]);\r\n\r\n  // functions\r\n  const handleAnswers = (answer: Answer) => {\r\n    handleResults(answer.isCorrect);\r\n    setSelectedAnswer(answer);\r\n  };\r\n  const handleForward = () => {\r\n    handleResults(null);\r\n    setSelectedAnswer(null);\r\n    updateStage();\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styledQuizAnswers.container}>\r\n        <div className={styledQuizAnswers.btnContainer}>\r\n          {answers.map((answer) => (\r\n            <motion.button\r\n              key={answer.value + answer.isCorrect}\r\n              onClick={() => handleAnswers(answer)}\r\n              className={`${styledQuizAnswers.quizBtn} quiz-btn ${\r\n                selectedAnswer ? \"disabled\" : \"\"\r\n              }\r\n            ${\r\n              selectedAnswer &&\r\n              answer.isCorrect &&\r\n              styledQuizAnswers.selectedCorrect\r\n            }\r\n            ${\r\n              !selectedAnswer?.isCorrect &&\r\n              answer === selectedAnswer &&\r\n              styledQuizAnswers.selectedIncorrect\r\n            }\r\n            `}\r\n              disabled={selectedAnswer ? true : false}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n            >\r\n              {answer.value}\r\n            </motion.button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styledQuizAnswers.forwardBtnContainer}>\r\n          {selectedAnswer && (\r\n            <motion.button\r\n              animate={{ scale: [0, 1.5, 1.5, 1] }}\r\n              transition={{ type: \"tween\", duration: 0.5 }}\r\n              initial={{ scale: 0 }}\r\n              onClick={handleForward}\r\n              className={`${styledQuizAnswers.forwardBtn} element-full`}\r\n            >\r\n              <DoubleArrowRightIcon className={styledQuizAnswers.forwardIcon} />\r\n            </motion.button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizAnswers;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ResultTracker_wrapper__nIYzs\",\"numericContainer\":\"ResultTracker_numericContainer__RbWg8\",\"numericStageContainer\":\"ResultTracker_numericStageContainer__lSzvB\",\"resultsContainer\":\"ResultTracker_resultsContainer__X26RA\",\"iconContainer\":\"ResultTracker_iconContainer__dGn-s\",\"iconTransform\":\"ResultTracker_iconTransform__e9Dq4\"};","import ResultTracker from \"./ResultTracker\";\r\n\r\nexport default ResultTracker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { motion, MotionProps, AnimatePresence } from \"framer-motion\";\r\n\r\nimport { MdOutlinePending } from \"react-icons/md\";\r\nimport { GiCheckMark } from \"react-icons/gi\";\r\nimport { GiCrossMark } from \"react-icons/gi\";\r\n\r\nimport styledTracker from \"./ResultTracker.module.css\";\r\n\r\ninterface Props {\r\n  difficulty: unknown;\r\n  questionIndex: number;\r\n  questionStage: number;\r\n  isCorrect?: boolean | null;\r\n  cacheResults: (easy: any, medium?: any, difficult?: any) => void;\r\n}\r\n\r\nconst ResultTracker: React.FC<Props> = ({\r\n  difficulty,\r\n  questionIndex,\r\n  questionStage,\r\n  isCorrect,\r\n  cacheResults,\r\n}) => {\r\n  // state\r\n  const [results, setResults] = useState<any>({\r\n    easy: Array.from<unknown>({ length: 10 }).fill(\"pending\"),\r\n    medium: Array.from<unknown>({ length: 10 }).fill(\"pending\"),\r\n    difficult: Array.from<unknown>({ length: 10 }).fill(\"pending\"),\r\n    currentIndex: null,\r\n    currentStage: null,\r\n  });\r\n  // motion\r\n  const resultsAnimation: MotionProps[\"variants\"] = {\r\n    initial: {},\r\n    animate: {\r\n      y: [50, 0],\r\n      x: [75, 0],\r\n      scale: [2, 1],\r\n      rotateX: [180, 0],\r\n      rotateY: [360, 250, 180, 90, 0],\r\n      rotate: [360, 180, 90, 0],\r\n    },\r\n    exit: { y: [50, 0], x: [50, 0] },\r\n  };\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    if (isCorrect === true || isCorrect === false) {\r\n      updateResults(questionIndex, isCorrect, questionStage);\r\n    }\r\n\r\n    if (results.currentIndex === 9) {\r\n      if (results.currentStage === 1 && difficulty === \"easy\") {\r\n        cacheResults(results.easy);\r\n      } else if (results.currentStage === 2 && difficulty === \"medium\") {\r\n        cacheResults(results.easy, results.medium);\r\n      } else if (results.currentStage === 3 && difficulty === \"difficult\") {\r\n        cacheResults(results.easy, results.medium, results.difficult);\r\n      }\r\n    }\r\n  }, [isCorrect, questionStage]);\r\n\r\n  // functions\r\n  const updateResults = (index: number, isCorrect: boolean, stage: number) => {\r\n    let newResults: any = [];\r\n    if (stage === 1) {\r\n      newResults = [...results.easy];\r\n      newResults[index] = isCorrect;\r\n      setResults({\r\n        ...results,\r\n        easy: newResults,\r\n        currentIndex: index,\r\n        currentStage: stage,\r\n      });\r\n    } else if (stage === 2) {\r\n      newResults = [...results.medium];\r\n      newResults[index] = isCorrect;\r\n      setResults({\r\n        ...results,\r\n        medium: newResults,\r\n        currentIndex: index,\r\n        currentStage: stage,\r\n      });\r\n    } else if (stage === 3) {\r\n      newResults = [...results.difficult];\r\n      newResults[index] = isCorrect;\r\n      setResults({\r\n        ...results,\r\n        difficult: newResults,\r\n        currentIndex: index,\r\n        currentStage: stage,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        className={`${styledTracker.wrapper} element-full`}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ delay: 0.3, duration: 0.3 }}\r\n      >\r\n        <motion.div\r\n          className={`${styledTracker.numericContainer} element-border `}\r\n          initial={{ scale: 0 }}\r\n          animate={{ scale: 1 }}\r\n          transition={{ delay: 0.3 }}\r\n        >\r\n          <span className=\"numeric-stage-filler\"></span>\r\n          <span>I</span>\r\n          <span>II</span>\r\n          <span>III</span>\r\n          <span>IV</span>\r\n          <span>V</span>\r\n          <span>VI</span>\r\n          <span>VII</span>\r\n          <span>VIII</span>\r\n          <span>IX</span>\r\n          <span>X</span>\r\n        </motion.div>\r\n        <motion.div\r\n          className={`${styledTracker.resultsContainer} element-border`}\r\n          initial={{ scale: 0 }}\r\n          animate={{ scale: 1 }}\r\n          transition={{ delay: 0.3 }}\r\n        >\r\n          <span\r\n            className={`${styledTracker.numericStageContainer} numeric-stage-filler`}\r\n          >\r\n            {difficulty === \"easy\" ? (\r\n              <span>I</span>\r\n            ) : difficulty === \"medium\" ? (\r\n              <>\r\n                <span>I</span>\r\n                <span>II</span>\r\n              </>\r\n            ) : difficulty === \"difficult\" ? (\r\n              <>\r\n                <span>I</span>\r\n                <span>II</span>\r\n                <span>III</span>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </span>\r\n          {/* quiz-easy */}\r\n          {results.easy &&\r\n            difficulty === \"easy\" &&\r\n            results.easy.map((_item: unknown, index: number) => (\r\n              <span\r\n                key={index}\r\n                className={`${styledTracker.iconContainer} ${styledTracker.iconTransform}`}\r\n              >\r\n                <motion.span\r\n                  key={`icon-wrapper-${isCorrect}`}\r\n                  variants={resultsAnimation}\r\n                  initial=\"initial\"\r\n                  animate={\r\n                    index === results.currentIndex && questionIndex === index\r\n                      ? \"animate\"\r\n                      : \"initial\"\r\n                  }\r\n                  exit=\"exit\"\r\n                  className={styledTracker.easy}\r\n                >\r\n                  {results.easy[index] === \"pending\" && <MdOutlinePending />}\r\n                  {results.easy[index] === true && <GiCheckMark />}\r\n                  {results.easy[index] === false && <GiCrossMark />}\r\n                </motion.span>\r\n              </span>\r\n            ))}\r\n\r\n          {/* quiz-medium */}\r\n          {results.medium &&\r\n            difficulty === \"medium\" &&\r\n            results.medium.map((_item: unknown, index: number) => (\r\n              <span\r\n                key={`icon-wrapper-${index}-${isCorrect}`}\r\n                className={styledTracker.iconContainer}\r\n              >\r\n                <span className={styledTracker.iconTransform}>\r\n                  <motion.span\r\n                    variants={resultsAnimation}\r\n                    initial=\"initial\"\r\n                    animate={\r\n                      index === results.currentIndex &&\r\n                      questionIndex === index &&\r\n                      results.currentStage === 1 &&\r\n                      results.currentStage === questionStage\r\n                        ? \"animate\"\r\n                        : \"initial\"\r\n                    }\r\n                    exit=\"exit\"\r\n                    className={styledTracker.easy}\r\n                  >\r\n                    {results.easy[index] === \"pending\" ? (\r\n                      <MdOutlinePending />\r\n                    ) : results.easy[index] === true ? (\r\n                      <GiCheckMark />\r\n                    ) : results.easy[index] === false ? (\r\n                      <GiCrossMark />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </motion.span>\r\n                </span>\r\n                <span className={styledTracker.iconTransform}>\r\n                  <motion.span\r\n                    variants={resultsAnimation}\r\n                    initial=\"initial\"\r\n                    animate={\r\n                      index === results.currentIndex &&\r\n                      questionIndex === index &&\r\n                      results.currentStage === 2 &&\r\n                      results.currentStage === questionStage\r\n                        ? \"animate\"\r\n                        : \"initial\"\r\n                    }\r\n                    exit=\"exit\"\r\n                    className={styledTracker.medium}\r\n                  >\r\n                    {results.medium[index] === \"pending\" ? (\r\n                      <MdOutlinePending />\r\n                    ) : results.medium[index] === true ? (\r\n                      <GiCheckMark />\r\n                    ) : results.medium[index] === false ? (\r\n                      <GiCrossMark />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </motion.span>\r\n                </span>\r\n              </span>\r\n            ))}\r\n          {/* quiz-difficult */}\r\n          {results &&\r\n            difficulty === \"difficult\" &&\r\n            results.medium.map((_item: unknown, index: number) => (\r\n              <span\r\n                key={`icon-wrapper-${index}-${isCorrect}`}\r\n                className={styledTracker.iconContainer}\r\n              >\r\n                <span className={styledTracker.iconTransform}>\r\n                  <motion.span\r\n                    variants={resultsAnimation}\r\n                    initial=\"initial\"\r\n                    animate={\r\n                      index === results.currentIndex &&\r\n                      questionIndex === index &&\r\n                      results.currentStage === 1 &&\r\n                      results.currentStage === questionStage\r\n                        ? \"animate\"\r\n                        : \"initial\"\r\n                    }\r\n                    exit=\"exit\"\r\n                    className={styledTracker.easy}\r\n                  >\r\n                    {results.easy[index] === \"pending\" ? (\r\n                      <MdOutlinePending />\r\n                    ) : results.easy[index] === true ? (\r\n                      <GiCheckMark />\r\n                    ) : results.easy[index] === false ? (\r\n                      <GiCrossMark />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </motion.span>\r\n                </span>\r\n                <span className={styledTracker.iconTransform}>\r\n                  <motion.span\r\n                    variants={resultsAnimation}\r\n                    initial=\"initial\"\r\n                    animate={\r\n                      index === results.currentIndex &&\r\n                      questionIndex === index &&\r\n                      results.currentStage === 2 &&\r\n                      results.currentStage === questionStage\r\n                        ? \"animate\"\r\n                        : \"initial\"\r\n                    }\r\n                    exit=\"exit\"\r\n                    className={styledTracker.medium}\r\n                  >\r\n                    {results.medium[index] === \"pending\" ? (\r\n                      <MdOutlinePending />\r\n                    ) : results.medium[index] === true ? (\r\n                      <GiCheckMark />\r\n                    ) : results.medium[index] === false ? (\r\n                      <GiCrossMark />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </motion.span>\r\n                </span>\r\n                <span className={styledTracker.iconTransform}>\r\n                  <motion.span\r\n                    variants={resultsAnimation}\r\n                    initial=\"initial\"\r\n                    animate={\r\n                      index === results.currentIndex &&\r\n                      questionIndex === index &&\r\n                      results.currentStage === 3 &&\r\n                      results.currentStage === questionStage\r\n                        ? \"animate\"\r\n                        : \"initial\"\r\n                    }\r\n                    exit=\"exit\"\r\n                    className={styledTracker.difficult}\r\n                  >\r\n                    {results.difficult[index] === \"pending\" ? (\r\n                      <MdOutlinePending />\r\n                    ) : results.difficult[index] === true ? (\r\n                      <GiCheckMark />\r\n                    ) : results.difficult[index] === false ? (\r\n                      <GiCrossMark />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </motion.span>\r\n                </span>\r\n              </span>\r\n            ))}\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default ResultTracker;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Challenges_wrapper__frJq6\",\"container\":\"Challenges_container__fiUf+\",\"resultimgWrapper\":\"Challenges_resultimgWrapper__WMfcq\",\"resultTrackerWrapper\":\"Challenges_resultTrackerWrapper__4leEZ\",\"imgWrapper\":\"Challenges_imgWrapper__yJbJy\",\"imgContainer\":\"Challenges_imgContainer__c7f-l\",\"challengeHeadline\":\"Challenges_challengeHeadline__XTzyQ\"};","import Challenges from \"./Challenges\";\r\n\r\nexport default Challenges;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport QuizAnswers from \"../QuizAnswers\";\r\nimport ResultTracker from \"../ResultTracker\";\r\n\r\nimport styledChallenges from \"./Challenges.module.css\";\r\ninterface Props {\r\n  challengeArr: any;\r\n  wrongArr: any;\r\n  updateCounter: () => void;\r\n  counter: number;\r\n  level: unknown;\r\n  cacheResults: (easy: any, medium?: any, difficult?: any) => void;\r\n}\r\n\r\nconst Challenges: React.FC<Props> = ({\r\n  challengeArr,\r\n  wrongArr,\r\n  counter,\r\n  updateCounter,\r\n  level,\r\n  cacheResults,\r\n}) => {\r\n  // state\r\n  const [data, setData] = useState<any>(null);\r\n  const [incorrectAnswers, setIncorrectAnswers] = useState<any>({\r\n    easy: [],\r\n    medium: [],\r\n    difficult: [],\r\n  });\r\n  const [correctAnswer, setCorrectAnswer] = useState<any>({\r\n    easy: \"\",\r\n    medium: \"\",\r\n    difficult: 0,\r\n  });\r\n  const [currentStage, setCurrentStage] = useState<number>(1);\r\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\r\n\r\n  // refs\r\n  let svgUrl = useRef<string>(\"\");\r\n\r\n  // motion\r\n  const motionH3 = {\r\n    initial: {\r\n      opacity: 0,\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n    },\r\n  };\r\n\r\n  // side effect\r\n  useEffect(() => {\r\n    if (challengeArr) {\r\n      setData(challengeArr);\r\n    }\r\n    if (data) {\r\n      setCorrectAnswer({\r\n        easy: data[counter]?.name.common,\r\n        medium: data[counter]?.capital[0],\r\n        difficult: data[counter]?.population,\r\n      });\r\n    }\r\n    if (correctAnswer.easy) {\r\n      setIncorrectAnswers({\r\n        easy: handleIncorrectAnswers(wrongArr, \"easy\"),\r\n        medium: handleIncorrectAnswers(wrongArr, \"medium\"),\r\n        difficult: handleIncorrectAnswers(wrongArr, \"difficult\"),\r\n      });\r\n    }\r\n\r\n    // svg aspect ratio\r\n    if (data) {\r\n      if (svgUrl.current === data[counter]?.flags.svg) return;\r\n      svgUrl.current = data ? data[counter]?.flags.svg : \"\";\r\n      const img = new Image();\r\n\r\n      img.onload = () => {\r\n        const aspectRatio = img.width / img.height;\r\n        document.documentElement.style.setProperty(\r\n          \"--aspect-ratio\",\r\n          `${aspectRatio}`\r\n        );\r\n      };\r\n\r\n      img.src = svgUrl.current;\r\n    }\r\n  }, [challengeArr, data, counter, wrongArr, correctAnswer.easy]);\r\n\r\n  // functions\r\n  const handleIncorrectAnswers = (arr: any, difficulty: string) => {\r\n    let prefixArr: any = [];\r\n\r\n    arr.forEach((item: any) => {\r\n      if (item.name.common !== correctAnswer.easy) {\r\n        if (item.capital && item.population) {\r\n          if (difficulty === \"easy\") {\r\n            prefixArr.push(item.name.common);\r\n          } else if (difficulty === \"medium\") {\r\n            prefixArr.push(item.capital[0]);\r\n          } else if (difficulty === \"difficult\") {\r\n            prefixArr.push(formatPopulation(item.population));\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    const incorrectAnswers: any = [];\r\n    while (incorrectAnswers.length < 3) {\r\n      const randomIndex = Math.floor(Math.random() * prefixArr.length);\r\n      if (!incorrectAnswers.includes(prefixArr[randomIndex])) {\r\n        incorrectAnswers.push(prefixArr[randomIndex]);\r\n      }\r\n    }\r\n    return incorrectAnswers;\r\n  };\r\n  const updateStage = () => {\r\n    if (currentStage === 1) {\r\n      if (level === \"easy\") {\r\n        updateCounter();\r\n      } else if (level === \"medium\" || level === \"difficult\") {\r\n        setCurrentStage(2);\r\n      }\r\n    }\r\n    if (currentStage === 2) {\r\n      if (level === \"medium\") {\r\n        updateCounter();\r\n        setCurrentStage(1);\r\n      } else if (level === \"difficult\") {\r\n        setCurrentStage(3);\r\n      }\r\n    }\r\n    if (currentStage === 3) {\r\n      updateCounter();\r\n      setCurrentStage(1);\r\n    }\r\n  };\r\n\r\n  const handleResultValidation = (isCorrect: boolean | null) => {\r\n    setIsCorrect(isCorrect);\r\n  };\r\n  const formatPopulation = (population: number) => {\r\n    return population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  return (\r\n    <div className={styledChallenges.wrapper}>\r\n      <div className={styledChallenges.container}>\r\n        {data && (\r\n          <>\r\n            <div className={styledChallenges.resultimgWrapper}>\r\n              <div className={styledChallenges.resultTrackerWrapper}>\r\n                <ResultTracker\r\n                  difficulty={level}\r\n                  questionIndex={counter}\r\n                  questionStage={currentStage}\r\n                  isCorrect={isCorrect}\r\n                  cacheResults={cacheResults}\r\n                />\r\n              </div>\r\n              <div className={styledChallenges.imgWrapper}>\r\n                <motion.div\r\n                  className={`${styledChallenges.imgContainer} img-container`}\r\n                  initial={{ scaleY: 0 }}\r\n                  whileInView={{ scaleY: 1 }}\r\n                  transition={{ delay: 0.1 }}\r\n                  key={counter}\r\n                >\r\n                  <img\r\n                    src={data[counter]?.flags.svg}\r\n                    key={data[counter]?.flags.svg}\r\n                    alt=\"\"\r\n                    className=\"quiz-img\"\r\n                  />\r\n                </motion.div>\r\n              </div>\r\n            </div>\r\n\r\n            {currentStage === 1 && (\r\n              <>\r\n                <motion.h3\r\n                  className={styledChallenges.challengeHeadline}\r\n                  variants={motionH3}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                >\r\n                  Select the name of the country that represents this flag\r\n                </motion.h3>\r\n                {correctAnswer && incorrectAnswers && (\r\n                  <QuizAnswers\r\n                    correct={correctAnswer.easy}\r\n                    incorrect={incorrectAnswers.easy}\r\n                    updateStage={updateStage}\r\n                    handleResults={handleResultValidation}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n            {level !== \"easy\" && currentStage === 2 && (\r\n              <>\r\n                <motion.h3\r\n                  className={styledChallenges.challengeHeadline}\r\n                  variants={motionH3}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                >\r\n                  Select the capital city of this country\r\n                </motion.h3>\r\n                {correctAnswer && incorrectAnswers && (\r\n                  <QuizAnswers\r\n                    correct={correctAnswer.medium}\r\n                    incorrect={incorrectAnswers.medium}\r\n                    updateStage={updateStage}\r\n                    handleResults={handleResultValidation}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n            {level === \"difficult\" && currentStage === 3 && (\r\n              <>\r\n                <motion.h3\r\n                  className={styledChallenges.challengeHeadline}\r\n                  variants={motionH3}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                >\r\n                  Select the approximate population of this country\r\n                </motion.h3>\r\n                {correctAnswer && incorrectAnswers && (\r\n                  <QuizAnswers\r\n                    correct={formatPopulation(correctAnswer.difficult)}\r\n                    incorrect={incorrectAnswers.difficult}\r\n                    updateStage={updateStage}\r\n                    handleResults={handleResultValidation}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Challenges;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noteContainer\":\"QuizResults_noteContainer__M3akd\",\"noteItem\":\"QuizResults_noteItem__0iF3+\",\"youScored\":\"QuizResults_youScored__MGbLP\",\"wrapper\":\"QuizResults_wrapper__eAWLF\",\"container\":\"QuizResults_container__knJJW\",\"resultsWrapper\":\"QuizResults_resultsWrapper__8p+Cp\",\"resultsContainer\":\"QuizResults_resultsContainer__MkT37\",\"itemFlag\":\"QuizResults_itemFlag__rm6lG\",\"filler\":\"QuizResults_filler__u4Mah\",\"resultsItemHead\":\"QuizResults_resultsItemHead__ARRI9\",\"resultsItem\":\"QuizResults_resultsItem__-1lIJ\",\"itemName\":\"QuizResults_itemName__a6yAd\",\"itemCapital\":\"QuizResults_itemCapital__XVXlY\",\"itemPopulation\":\"QuizResults_itemPopulation__gzkai\",\"itemPoints\":\"QuizResults_itemPoints__qE-FD\",\"icon\":\"QuizResults_icon__oGpr+\",\"btnContainer\":\"QuizResults_btnContainer__B+W1K\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__N0lHo\"};","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport styledButton from \"./Button.module.css\";\r\n\r\ninterface Props {\r\n  text: String;\r\n  action: () => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ text, action }) => {\r\n  return (\r\n    <motion.button\r\n      className={`${styledButton.btn} quiz-btn`}\r\n      onClick={action}\r\n      initial={{ y: -100, scale: 0 }}\r\n      animate={{ y: 0, scale: 1 }}\r\n      transition={{ delay: 1.25, duration: 0.1 }}\r\n    >\r\n      {text}\r\n    </motion.button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import QuizResults from \"./QuizResults\";\r\n\r\nexport default QuizResults;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { GiCheckMark } from \"react-icons/gi\";\r\nimport { GiCrossMark } from \"react-icons/gi\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nimport styledResults from \"./QuizResults.module.css\";\r\nimport Button from \"../Button\";\r\n\r\ninterface Props {\r\n  correctData: any;\r\n  selectedAnswers: {\r\n    easy: [] | null;\r\n    medium?: [] | null;\r\n    difficult?: [] | null;\r\n  };\r\n}\r\ninterface Answer {\r\n  value: any;\r\n  isCorrect: boolean;\r\n}\r\n\r\nconst QuizResults: React.FC<Props> = ({ correctData, selectedAnswers }) => {\r\n  // state\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [validatedAnswers, setValidatedAnswers] = useState<any>({\r\n    flags: [] as String[],\r\n    easy: [] as Answer[],\r\n    medium: [] as Answer[],\r\n    difficult: [] as Answer[],\r\n  });\r\n\r\n  const [scoredPoints, setScoredPoints] = useState({\r\n    totalPoints: null as Number | null,\r\n    pointsPerCountry: [] as String[],\r\n  });\r\n  // motion\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { staggerChildren: 0.2 } },\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: -100 },\r\n    visible: { opacity: 1, y: 0 },\r\n  };\r\n\r\n  // naviage\r\n  const navigate = useNavigate();\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    if (correctData && selectedAnswers && !isMounted) {\r\n      validateSelectedAnswers();\r\n      setIsMounted(true);\r\n    }\r\n  }, [correctData, selectedAnswers, isMounted]);\r\n\r\n  // functions\r\n  const formatPopulation = (population: number) => {\r\n    return population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  // const handleReload = () => {\r\n  //   let modifiedPath = window.location.pathname.slice(\r\n  //     24,\r\n  //     window.location.pathname.length\r\n  //   );\r\n  //   console.log(modifiedPath);\r\n  //   navigate(modifiedPath);\r\n  // };\r\n\r\n  const validateSelectedAnswers = () => {\r\n    let flags = [] as String[];\r\n    let validatedEasy = [] as Answer[];\r\n    let validatedMedium = [] as Answer[];\r\n    let validatedDifficult = [] as Answer[];\r\n\r\n    let tempTotalPoints = 0;\r\n    let tempPointsPerCountry = [] as String[];\r\n    let questionsPerCountry = null as Number | null;\r\n\r\n    if (!questionsPerCountry) {\r\n      if (selectedAnswers.difficult) questionsPerCountry = 3;\r\n      else if (selectedAnswers.medium) questionsPerCountry = 2;\r\n      else questionsPerCountry = 1;\r\n    }\r\n\r\n    if (selectedAnswers.easy && correctData) {\r\n      for (let i = 0; i < selectedAnswers.easy?.length; i++) {\r\n        if (selectedAnswers.easy) {\r\n          validatedEasy.push({\r\n            value: correctData[i]?.name.common,\r\n            isCorrect: selectedAnswers.easy[i],\r\n          });\r\n          flags.push(correctData[i].flags.png);\r\n        }\r\n\r\n        if (selectedAnswers.medium) {\r\n          validatedMedium.push({\r\n            value: correctData[i]?.capital[0],\r\n            isCorrect: selectedAnswers.medium[i],\r\n          });\r\n        }\r\n        if (selectedAnswers.difficult) {\r\n          validatedDifficult.push({\r\n            value: correctData[i]?.population,\r\n            isCorrect: selectedAnswers.difficult[i],\r\n          });\r\n        }\r\n        if (validatedEasy) {\r\n          let points = calculateScore(\r\n            validatedEasy[i].isCorrect,\r\n            validatedMedium[i]?.isCorrect,\r\n            validatedDifficult[i]?.isCorrect\r\n          );\r\n\r\n          tempTotalPoints += points;\r\n          tempPointsPerCountry[i] = `${points} / ${questionsPerCountry}`;\r\n        }\r\n      }\r\n    }\r\n    if (validatedEasy) {\r\n      setValidatedAnswers({\r\n        flags: flags,\r\n        easy: validatedEasy,\r\n        medium: validatedMedium,\r\n        difficult: validatedDifficult,\r\n      });\r\n      setScoredPoints({\r\n        totalPoints: tempTotalPoints,\r\n        pointsPerCountry: tempPointsPerCountry,\r\n      });\r\n    }\r\n  };\r\n  const calculateScore = (\r\n    name: boolean,\r\n    capital?: boolean,\r\n    population?: boolean\r\n  ) => {\r\n    let pointsPerCountry = 0;\r\n\r\n    if (name === true) ++pointsPerCountry;\r\n    if (capital === true) ++pointsPerCountry;\r\n    if (population === true) ++pointsPerCountry;\r\n\r\n    return pointsPerCountry;\r\n  };\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styledResults.noteContainer}\r\n        initial={{ y: -100, scale: 0 }}\r\n        animate={{ y: 0, scale: 1 }}\r\n        transition={{ delay: 1.35 }}\r\n      >\r\n        <p className={styledResults.noteItem}>\r\n          Note: only the correct answers are shown in the results tab and the\r\n          icon indicates whether you got it right or wrong\r\n        </p>\r\n      </motion.div>\r\n      <div className={`${styledResults.wrapper} element-full`}>\r\n        <div className={`${styledResults.container} element-border`}>\r\n          <div className={styledResults.resultsWrapper}>\r\n            <AnimatePresence>\r\n              <motion.div\r\n                className={`${styledResults.resultsContainer} results-item-container`}\r\n                variants={containerVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n              >\r\n                <div className={styledResults.itemFlag}>\r\n                  <p className={styledResults.resultsItemHead}>Flag</p>\r\n                </div>\r\n                <div className={styledResults.itemName}>\r\n                  <p className={styledResults.resultsItemHead}>Name</p>\r\n                </div>\r\n                {selectedAnswers.medium && validatedAnswers.medium && (\r\n                  <div className={styledResults.itemCapital}>\r\n                    <p className={styledResults.resultsItemHead}>Capital</p>\r\n                  </div>\r\n                )}\r\n                {selectedAnswers.difficult && validatedAnswers.difficult && (\r\n                  <div className={styledResults.itemPopulation}>\r\n                    <p className={styledResults.resultsItemHead}>Population</p>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n              {validatedAnswers.easy[0] &&\r\n                Array.from<null>({ length: 10 })\r\n                  .fill(null)\r\n                  .map((_item: null, index: number) => (\r\n                    <motion.div\r\n                      variants={containerVariants}\r\n                      initial=\"hidden\"\r\n                      animate=\"visible\"\r\n                      className={`${styledResults.resultsContainer} results-item-container`}\r\n                      key={index}\r\n                    >\r\n                      <motion.div\r\n                        className={` ${styledResults.itemFlag}`}\r\n                        variants={itemVariants}\r\n                        transition={{ delay: index * 0.1 }}\r\n                      >\r\n                        <img\r\n                          src={validatedAnswers.flags[index]}\r\n                          alt=\"\"\r\n                          className=\"element-border\"\r\n                        />\r\n                      </motion.div>\r\n                      <motion.div\r\n                        className={` ${styledResults.itemName}`}\r\n                        variants={itemVariants}\r\n                        transition={{ delay: index * 0.125 }}\r\n                      >\r\n                        <p className={`${styledResults.resultsItem} `}>\r\n                          {validatedAnswers.easy[index].value}\r\n                        </p>\r\n                        <span className={styledResults.icon}>\r\n                          {validatedAnswers.easy[index].isCorrect ? (\r\n                            <GiCheckMark color=\"green\" />\r\n                          ) : (\r\n                            <GiCrossMark color=\"red\" />\r\n                          )}\r\n                        </span>\r\n                      </motion.div>\r\n                      {selectedAnswers.medium && validatedAnswers.medium && (\r\n                        <motion.div\r\n                          className={` ${styledResults.itemCapital}`}\r\n                          variants={itemVariants}\r\n                          transition={{ delay: index * 0.15 }}\r\n                        >\r\n                          <p className={`${styledResults.resultsItem} `}>\r\n                            {validatedAnswers.medium[index].value}\r\n                          </p>\r\n                          <span className={styledResults.icon}>\r\n                            {validatedAnswers.medium[index].isCorrect ? (\r\n                              <GiCheckMark color=\"green\" />\r\n                            ) : (\r\n                              <GiCrossMark color=\"red\" />\r\n                            )}\r\n                          </span>\r\n                        </motion.div>\r\n                      )}\r\n                      {selectedAnswers.difficult &&\r\n                        validatedAnswers.difficult && (\r\n                          <motion.div\r\n                            className={` ${styledResults.itemPopulation}`}\r\n                            variants={itemVariants}\r\n                            transition={{ delay: index * 0.175 }}\r\n                          >\r\n                            <p className={`${styledResults.resultsItem} `}>\r\n                              {formatPopulation(\r\n                                validatedAnswers.difficult[index].value\r\n                              )}\r\n                            </p>\r\n                            <span className={styledResults.icon}>\r\n                              {validatedAnswers.difficult[index].isCorrect ? (\r\n                                <GiCheckMark color=\"green\" />\r\n                              ) : (\r\n                                <GiCrossMark color=\"red\" />\r\n                              )}\r\n                            </span>\r\n                          </motion.div>\r\n                        )}\r\n                      <motion.span\r\n                        className={styledResults.itemPoints}\r\n                        variants={itemVariants}\r\n                        transition={{ delay: index * 0.2 }}\r\n                      >\r\n                        <p>{scoredPoints.pointsPerCountry[index]}</p>\r\n                      </motion.span>\r\n                    </motion.div>\r\n                  ))}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n\r\n        {scoredPoints.pointsPerCountry[0] && (\r\n          <motion.div\r\n            className={styledResults.youScoredContainer}\r\n            variants={containerVariants}\r\n            initial={{ y: -100, scale: 0 }}\r\n            animate={{ y: 0, scale: 1 }}\r\n            transition={{ delay: 1.25 }}\r\n          >\r\n            <motion.p className={styledResults.youScored}>\r\n              You scored:\r\n              {` ${scoredPoints.totalPoints} / ${\r\n                parseInt(scoredPoints.pointsPerCountry[0].charAt(4)) * 10\r\n              }`}\r\n            </motion.p>\r\n          </motion.div>\r\n        )}\r\n        <div className={styledResults.btnContainer}>\r\n          <Button text=\"Back\" action={() => navigate(\"/challenge\")} />\r\n          <Button text=\"Retry\" action={() => window.location.reload()} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizResults;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"QuizPage_container__MeROo\"};","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Challenges from \"../../components/Challenges\";\r\nimport QuizResults from \"../../components/QuizResults\";\r\n\r\nimport StyledQuiz from \"./QuizPage.module.css\";\r\n\r\nconst fetchCountries = async (host: string) => {\r\n  const data = await axios.get(host);\r\n\r\n  const filteredArr = data.data.filter((item: any) => {\r\n    return item.capital && item.population;\r\n  });\r\n\r\n  return filteredArr;\r\n};\r\n\r\nconst QuizPage = () => {\r\n  // params\r\n  const { level, region } = useParams();\r\n\r\n  // state\r\n  const [host, setHost] = useState<string>(\"\");\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n  const [challengeData, setChallengeData] = useState<any>([]);\r\n  const [counter, setCounter] = useState<number>(0);\r\n  const [endQuiz, setEndQuiz] = useState<boolean>(false);\r\n  const [cachedResults, setCachedResults] = useState({\r\n    easy: null,\r\n    medium: null,\r\n    difficult: null,\r\n  });\r\n\r\n  // query\r\n  const { data, isLoading } = useQuery(\r\n    [\"Quiz\", host],\r\n    () => fetchCountries(host),\r\n    {\r\n      enabled: host !== \"\",\r\n      staleTime: 300,\r\n      retry: 1,\r\n    }\r\n  );\r\n  // side effects\r\n  useEffect(() => {\r\n    if (region === \"All\") {\r\n      setHost(\"https://restcountries.com/v3.1/all\");\r\n    } else if (region !== \"All\") {\r\n      setHost(`https://restcountries.com/v3.1/region/${region}`);\r\n    }\r\n    if (data && !isMounted) {\r\n      setChallengeData(challengeArray(data));\r\n      setIsMounted(true);\r\n    }\r\n    if (counter === 10) setEndQuiz(true);\r\n  }, [region, data, challengeData, isMounted, counter, cachedResults]);\r\n\r\n  // functions\r\n  const challengeArray = (arr: []) => {\r\n    return arr.sort(() => 0.5 - Math.random()).slice(0, 10);\r\n  };\r\n\r\n  const updateCounter = () => {\r\n    setCounter((prev) => prev + 1);\r\n  };\r\n  const cacheResults = (easy: any, medium?: any, difficult?: any) => {\r\n    if (level === \"easy\") setCachedResults({ ...cachedResults, easy: easy });\r\n    if (level === \"medium\")\r\n      setCachedResults({ ...cachedResults, easy: easy, medium: medium });\r\n    if (level === \"difficult\")\r\n      setCachedResults({ easy: easy, medium: medium, difficult: difficult });\r\n  };\r\n  return (\r\n    <main className={StyledQuiz.wrapper}>\r\n      {!isLoading && (\r\n        <div className={StyledQuiz.container}>\r\n          {challengeData && !endQuiz && (\r\n            <Challenges\r\n              level={level}\r\n              challengeArr={challengeData}\r\n              wrongArr={data}\r\n              counter={counter}\r\n              updateCounter={updateCounter}\r\n              cacheResults={cacheResults}\r\n            />\r\n          )}\r\n          {endQuiz && cachedResults.easy && (\r\n            <QuizResults\r\n              correctData={challengeData}\r\n              selectedAnswers={cachedResults}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","import QuizPage from \"./QuizPage\";\r\n\r\nexport default QuizPage;\r\n"],"names":["correct","incorrect","updateStage","handleResults","useState","answers","setAnswers","selectedAnswer","setSelectedAnswer","React","map","value","isCorrect","sort","Math","random","className","styledQuizAnswers","answer","motion","onClick","handleAnswers","disabled","initial","opacity","animate","scale","transition","type","duration","difficulty","questionIndex","questionStage","cacheResults","easy","Array","from","length","fill","medium","difficult","currentIndex","currentStage","results","setResults","resultsAnimation","y","x","rotateX","rotateY","rotate","exit","useEffect","updateResults","index","stage","newResults","AnimatePresence","styledTracker","delay","_item","variants","challengeArr","wrongArr","counter","updateCounter","level","data","setData","incorrectAnswers","setIncorrectAnswers","correctAnswer","setCorrectAnswer","setCurrentStage","setIsCorrect","svgUrl","useRef","motionH3","name","common","capital","population","handleIncorrectAnswers","current","flags","svg","img","Image","onload","aspectRatio","width","height","document","documentElement","style","setProperty","src","arr","prefixArr","forEach","item","push","formatPopulation","randomIndex","floor","includes","handleResultValidation","toString","replace","styledChallenges","scaleY","whileInView","alt","text","action","styledButton","correctData","selectedAnswers","isMounted","setIsMounted","validatedAnswers","setValidatedAnswers","totalPoints","pointsPerCountry","scoredPoints","setScoredPoints","containerVariants","hidden","visible","staggerChildren","itemVariants","navigate","useNavigate","validateSelectedAnswers","validatedEasy","validatedMedium","validatedDifficult","tempTotalPoints","tempPointsPerCountry","questionsPerCountry","i","png","points","calculateScore","styledResults","color","parseInt","charAt","window","location","reload","fetchCountries","host","axios","filteredArr","filter","useParams","region","setHost","challengeData","setChallengeData","setCounter","endQuiz","setEndQuiz","cachedResults","setCachedResults","useQuery","enabled","staleTime","retry","isLoading","challengeArray","slice","StyledQuiz","prev"],"sourceRoot":""}